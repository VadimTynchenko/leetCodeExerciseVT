1. Two sum
	Дано: Массив с интеджерами и таргет.
	Вернуть: позицию двух чисел, сумма которых будет равна таргету.
	Пример: массив = [2,7,11,15], таргет = 9	Ответ: 0, 1 => nums[0] + nums[1] = 2+7 = 9

	Решение:
		1 способ. Брут форс. Перебор всех вариантов суммы чисел массива(берем первое число за i и складываем со следующим j. Если равно, ретерним, если нет, складываем с последующим и тд. Если ни одного совпадения, в качестве i берем следующее число и складываем снова с последующими и тд):

			class Solution:
    			def twoSum(self, nums: List[int], target: int) -> List[int]:
    				for i in range(len(nums)):
    					for j in range(i+1, len(nums)):
    						if nums[i] + nums[j] == target:
    							return i, j

    	Время: n^2	(перебор массива дважды)
    	Место: 1 	(доп памяти не требуется)

    	2 способ. Мемоизация. Создаем мапу(хеш-таблицу). Если разница (таргет минус текущее число) есть в хеш-мапе, возвращаем позицию текущего числа(i) и значение хеш-мапы по ключу таргет минус текущее число. Если алгоритм продолжается, добавляем текущее число в хеш-мапу как ключ, а в значение - его позицию.

    		class Solution:
    			def twoSum(self, nums: List[int], target: int) -> List[int]:
    				hashmap = {}
    				for i in range(len(nums)):
    					if target - nums[i] in hashmap:
    						return i, hashmap[target-nums[i]]
    					hashmap[nums[i]] = i
    	Время: n (перебор массива один раз)
    	Место, n (создание мапы)

2. 